{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","crd","ind","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,KAC9C,gCACI,6BAAKC,IACL,4BAAIC,WCYLI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACA,8BAEQA,EAAOC,KAAI,SAACC,EAAIC,GACZ,OACI,cAAC,EAAD,CAEIV,GAAMO,EAAOG,GAAKV,GAClBC,KAAQM,EAAOG,GAAKT,KACpBC,MAASK,EAAOG,GAAKR,OAHdQ,SCMhBC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAY,MAAjB,SACI,uBACIA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAaH,OCCdI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAAEC,UAAW,SAAUC,OAAQ,SAA7C,SACMH,EAAMI,YCkBLC,G,wDApBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAE9B,WAEI,OADoBC,KAAKF,MAAjBC,SAEG,sDAEAC,KAAKR,MAAMI,a,GAhBHM,IAAMC,YC2ClBC,E,kDArCX,aAAe,IAAD,8BACV,gBAWJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAcD,EAAME,OAAOC,SAX3C,EAAKX,MAAQ,CACThB,OAAQ,GACRyB,YAAa,IAJP,E,qDAOd,WAAqB,IAAD,OAChBG,MAAM,8CACL1C,MAAK,SAAA2C,GAAQ,OAAIA,EAASC,UAC1B5C,MAAK,SAAA6C,GAAK,OAAI,EAAKZ,SAAS,CAACnB,OAAQ+B,S,oBAK1C,WAAU,IAAD,EAC0Bb,KAAKF,MAA7BhB,EADF,EACEA,OAAQyB,EADV,EACUA,YACTO,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASX,EAAYU,kBAEzD,OAAKnC,EAAOqC,OAIJ,sBAAKzC,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWS,aAAgBa,KAAKK,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUvB,OAAWgC,WAR7B,oBAAIpC,UAAY,QAAhB,yB,GAtBFwB,IAAMC,WCAxBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.6e9667a5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nconst Card = ({ id, name, email }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robot' src={`https://robohash.org/${id}`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nconst CardList = ({ robots }) => {\n    return (\n    <div>\n        {\n            robots.map((crd,ind) => {\n                return (\n                    <Card \n                        key = {ind} \n                        id = {robots[ind].id} \n                        name = {robots[ind].name} \n                        email = {robots[ind].email} \n                    />\n                );\n            })\n        }\n    </div>\n    );\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className = 'pa2'>\n            <input \n                className = 'pa3 ba b--green bg-lightest-blue' \n                type = 'search' \n                placeholder = 'Search Robots'\n                onChange = { searchChange } \n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style = {{ overflowY: 'scroll', height: '900px'}}>\n            { props.children }\n        </div>\n    );\n}\n\nexport default Scroll;","import React from 'react';\n\nclass ErrorBoundry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true });\n    }\n    render() {\n        const { hasError} = this.state;\n        if(hasError) {\n            return <h1>Something Went Wrong</h1>\n        } else {\n            return this.props.children\n        }\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport './App.css';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({robots: users}));\n    }\n    onSearchChange = (event) => {\n        this.setState({ searchfield : event.target.value });\n    }\n    render() {\n        const {robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        if (!robots.length) {\n            return (<h1 className = 'tc f1'>Loading</h1>);\n        } else {\n            return (\n                <div className = 'tc'>\n                    <h1 className = 'f1'>RoboFriends</h1>\n                    <SearchBox searchChange = {this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots = { filteredRobots } />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}